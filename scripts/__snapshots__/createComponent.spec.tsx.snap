// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getComponentTemplate matches snapshot 1`] = `
"import * as React from 'react';
import classNames from 'classnames';

type Props = {
  className?: string;
  [key: string]: any;
};

const FooBar: React.FC<Props> = ({ className, ...other }) => {
   const classes = classNames(className, 'foo-bar');

   return <div {...other} className={classes} />;
};

export default FooBar;"
`;

exports[`getSpecTemplate matches snapshot 1`] = `
"import React from 'react';
import { shallow } from 'enzyme';
import merge from 'lodash/merge';
import FooBar from './FooBar';

const setup = (overrides = {}) => {
  const props = merge({}, overrides);
  const wrapper = shallow(<FooBar {...props} />);

  return { wrapper, props };
};

describe('<FooBar />', () => {
  it('should render', () => {
    const { wrapper } = setup();

    expect(wrapper).toMatchSnapshot();
  });

  it('should handle className', () => {
    const { wrapper } = setup();

    wrapper.setProps({ className: 'custom' });

    expect(wrapper.hasClass('foo-bar')).toBe(true);
    expect(wrapper.hasClass('custom')).toBe(true);
  });

  it('should pass through other props', () => {
    const { wrapper } = setup({ tabIndex: 1, id: 'test' });

    expect(wrapper.prop('tabIndex')).toEqual(1);
    expect(wrapper.prop('id')).toEqual('test');
  });
});
"
`;
